{"version":3,"file":"static/js/941.0a2b0692.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(element, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.0.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.0.6\", `Attempting to mix Motion versions ${nextValue.version} with 12.0.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","arguments","length","forEach","obj","value","defineProperty","configurable","writable","getOwnPropertyDescriptors","defineProperties","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","has","set","isAnimationControls","v","start","_objectWithoutProperties","source","excluded","i","target","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","values","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","animations","this","stop","runAll","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","concat","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","_objectSpread","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","transformPropOrder","transformProps","positionalKeys","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","MotionGlobalConfig","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","hasOwnProperty","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","transformName","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion"],"sourceRoot":""}